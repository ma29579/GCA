server.port = 8083
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.path=./
logging.file.name=Checkout.log

frontend.user=frontendUser
frontend.password=frontendPassword

checkout.user=checkoutUser
checkout.password=checkoutPassword

shipping.user=shippingoutUser
shipping.password=shippingPassword

<<<<<<< Updated upstream
cartApi=http://${CART_API_SERVICE_HOST}:${CART_API_SERVICE_PORT}/api/cart/
shippingApi=http://${SHIPPING_API_SERVICE_HOST}:${SHIPPING_API_SERVICE_PORT}/api/shipping/
=======
cartApi=http://localhost:8081/api/cart/
shippingApi=http://localhost:8082/api/shipping/
>>>>>>> Stashed changes

resilience4j.ratelimiter:
  instances:
    checkoutServiceRateLimiter:
      limitForPeriod: 1
      limitRefreshPeriod: 5s
      timeoutDuration: 0s

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 100
      permittedNumberOfCallsInHalfOpenState: 10
      waitDurationInOpenState: 10
      failureRateThreshold: 60
      registerHealthIndicator: true
  instances:
    checkoutServiceCircuitBreaker:
      baseConfig: default

resilience4j.bulkhead:
  instances:
    checkoutServiceBulkhead:
      maxConcurrentCalls: 10
      maxWaitDuration: 10ms

resilience4j.timelimiter:
  instances:
    checkoutServiceTimeLimiter:
      timeoutDuration: 2s

resilience4j.retry:
  instances:
    checkoutServiceRetry:
      maxRetryAttempts: 2
<<<<<<< Updated upstream
      waitDuration: 100

=======
      waitDuration: 100
>>>>>>> Stashed changes
