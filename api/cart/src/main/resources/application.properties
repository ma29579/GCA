server.port = 8081
server.tomcat.connection-timeout=10000

frontend.user=${FRONTEND_USERNAME}
frontend.password=${FRONTEND_PASSWORD}

cart.user=${CART_API_USERNAME}
cart.password=${CART_API_PASSWORD}

checkout.user=${CHECKOUT_API_USERNAME}
checkout.password=${CHECKOUT_API_PASSWORD}

catalogApi=http://${CATALOG_API_SERVICE_HOST}:${CATALOG_API_SERVICE_PORT}/api/catalog/
connectionString=jdbc:postgresql://${DATABASE_CART_SERVICE_HOST}:${DATABASE_CART_SERVICE_PORT}/onlineBoutique
connectionUser=gca
connectionPassword=gca

resilience4j.ratelimiter:
  instances:
    cartServiceRateLimiter:
      limitForPeriod: 1
      limitRefreshPeriod: 5s
      timeoutDuration: 0s

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 100
      permittedNumberOfCallsInHalfOpenState: 10
      waitDurationInOpenState: 10
      failureRateThreshold: 60
      registerHealthIndicator: true
  instances:
    cartServiceCircuitBreaker:
      baseConfig: default

resilience4j.bulkhead:
  instances:
    cartServiceBulkhead:
      maxConcurrentCalls: 10
      maxWaitDuration: 10ms

resilience4j.timelimiter:
  instances:
    cartServiceTimeLimiter:
      timeoutDuration: 2s

resilience4j.retry:
  instances:
    cartServiceRetry:
      maxRetryAttempts: 2
      waitDuration: 100
